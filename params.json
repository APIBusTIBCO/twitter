{"name":"Twitter","tagline":"A Ruby interface to the Twitter API.","body":"# The Twitter Ruby Gem\r\n\r\n[![Gem Version](http://img.shields.io/gem/v/twitter.svg)][gem]\r\n[![Build Status](http://img.shields.io/travis/sferik/twitter.svg)][travis]\r\n[![Dependency Status](http://img.shields.io/gemnasium/sferik/twitter.svg)][gemnasium]\r\n[![Code Climate](http://img.shields.io/codeclimate/github/sferik/twitter.svg)][codeclimate]\r\n[![Coverage Status](http://img.shields.io/coveralls/sferik/twitter.svg)][coveralls]\r\n[![Inline docs](http://inch-ci.org/github/sferik/twitter.png)][inchpages]\r\n\r\n[gem]: https://rubygems.org/gems/twitter\r\n[travis]: https://travis-ci.org/sferik/twitter\r\n[gemnasium]: https://gemnasium.com/sferik/twitter\r\n[codeclimate]: https://codeclimate.com/github/sferik/twitter\r\n[coveralls]: https://coveralls.io/r/sferik/twitter\r\n[inchpages]: http://inch-ci.org/github/sferik/twitter\r\n\r\nA Ruby interface to the Twitter API.\r\n\r\n## Installation\r\n    gem install twitter\r\n\r\n## CLI\r\nLooking for the Twitter command-line interface? It was [removed][] from this\r\ngem in version 0.5.0 and now exists as a [separate project][t].\r\n\r\n[removed]: https://github.com/sferik/twitter/commit/dd2445e3e2c97f38b28a3f32ea902536b3897adf\r\n[t]: https://github.com/sferik/t\r\n\r\n## Documentation\r\n[http://rdoc.info/gems/twitter][documentation]\r\n\r\n[documentation]: http://rdoc.info/gems/twitter\r\n\r\n## Examples\r\n[https://github.com/sferik/twitter/tree/master/examples][examples]\r\n\r\n[examples]: https://github.com/sferik/twitter/tree/master/examples\r\n\r\n## Announcements\r\nYou should [follow @gem][follow] on Twitter for announcements and updates about\r\nthis library.\r\n\r\n[follow]: https://twitter.com/gem\r\n\r\n## Mailing List\r\nPlease direct questions about this library to the [mailing list].\r\n\r\n[mailing list]: https://groups.google.com/group/twitter-ruby-gem\r\n\r\n## Apps Wiki\r\nDoes your project or organization use this gem? Add it to the [apps\r\nwiki][apps]!\r\n\r\n[apps]: https://github.com/sferik/twitter/wiki/apps\r\n\r\n## Configuration\r\nTwitter API v1.1 requires you to authenticate via OAuth, so you'll need to\r\n[register your application with Twitter][register]. Once you've registered an\r\napplication, make sure to set the correct access level, otherwise you may see\r\nthe error:\r\n\r\n[register]: https://apps.twitter.com/\r\n\r\n    Read-only application cannot POST\r\n\r\nYour new application will be assigned a consumer key/secret pair and you will\r\nbe assigned an OAuth access token/secret pair for that application. You'll need\r\nto configure these values before you make a request or else you'll get the\r\nerror:\r\n\r\n    Bad Authentication data\r\n\r\nYou can pass configuration options as a block to `Twitter::REST::Client.new`.\r\n\r\n```ruby\r\nclient = Twitter::REST::Client.new do |config|\r\n  config.consumer_key        = \"YOUR_CONSUMER_KEY\"\r\n  config.consumer_secret     = \"YOUR_CONSUMER_SECRET\"\r\n  config.access_token        = \"YOUR_ACCESS_TOKEN\"\r\n  config.access_token_secret = \"YOUR_ACCESS_SECRET\"\r\nend\r\n```\r\n\r\n## Usage Examples\r\nAfter configuring a `client`, you can do the following things.\r\n\r\n**Tweet (as the authenticated user)**\r\n\r\n```ruby\r\nclient.update(\"I'm tweeting with @gem!\")\r\n```\r\n**Follow a user (by screen name or user ID)**\r\n\r\n```ruby\r\nclient.follow(\"gem\")\r\nclient.follow(213747670)\r\n```\r\n**Fetch a user (by screen name or user ID)**\r\n\r\n```ruby\r\nclient.user(\"gem\")\r\nclient.user(213747670)\r\n```\r\n**Fetch a cursored list of followers with profile details (by screen name or user ID, or by implicit authenticated user)**\r\n\r\n```ruby\r\nclient.followers(\"gem\")\r\nclient.followers(213747670)\r\nclient.followers\r\n```\r\n**Fetch a cursored list of friends with profile details (by screen name or user ID, or by implicit authenticated user)**\r\n\r\n```ruby\r\nclient.friends(\"gem\")\r\nclient.friends(213747670)\r\nclient.friends\r\n```\r\n\r\n**Fetch the timeline of Tweets by a user**\r\n\r\n```ruby\r\nclient.user_timeline(\"gem\")\r\nclient.user_timeline(213747670)\r\n```\r\n**Fetch the timeline of Tweets from the authenticated user's home page**\r\n\r\n```ruby\r\nclient.home_timeline\r\n```\r\n**Fetch the timeline of Tweets mentioning the authenticated user**\r\n\r\n```ruby\r\nclient.mentions_timeline\r\n```\r\n**Fetch a particular Tweet by ID**\r\n\r\n```ruby\r\nclient.status(27558893223)\r\n```\r\n**Collect the three most recent marriage proposals to @justinbieber**\r\n\r\n```ruby\r\nclient.search(\"to:justinbieber marry me\", result_type: \"recent\").take(3).collect do |tweet|\r\n  \"#{tweet.user.screen_name}: #{tweet.text}\"\r\nend\r\n```\r\n**Find a Japanese-language Tweet tagged #ruby (excluding retweets)**\r\n\r\n```ruby\r\nclient.search(\"#ruby -rt\", lang: \"ja\").first.text\r\n```\r\nFor more usage examples, please see the full [documentation][].\r\n\r\n## Streaming\r\nSite Streams are restricted to whitelisted accounts. To apply for access,\r\n[follow the steps in the Site Streams documentation][site-streams]. [User\r\nStreams][user-streams] do not require prior approval.\r\n\r\n[site-streams]: https://dev.twitter.com/streaming/sitestreams#applyingforaccess\r\n[user-streams]: https://dev.twitter.com/streaming/userstreams\r\n\r\n**Configuration works just like `Twitter::REST::Client`**\r\n\r\n```ruby\r\nclient = Twitter::Streaming::Client.new do |config|\r\n  config.consumer_key        = \"YOUR_CONSUMER_KEY\"\r\n  config.consumer_secret     = \"YOUR_CONSUMER_SECRET\"\r\n  config.access_token        = \"YOUR_ACCESS_TOKEN\"\r\n  config.access_token_secret = \"YOUR_ACCESS_SECRET\"\r\nend\r\n```\r\n\r\n**Stream a random sample of all tweets**\r\n\r\n```ruby\r\nclient.sample do |object|\r\n  puts object.text if object.is_a?(Twitter::Tweet)\r\nend\r\n```\r\n\r\n**Stream mentions of coffee or tea**\r\n\r\n```ruby\r\ntopics = [\"coffee\", \"tea\"]\r\nclient.filter(track: topics.join(\",\")) do |object|\r\n  puts object.text if object.is_a?(Twitter::Tweet)\r\nend\r\n```\r\n\r\n**Stream tweets, events, and direct messages for the authenticated user**\r\n\r\n```ruby\r\nclient.user do |object|\r\n  case object\r\n  when Twitter::Tweet\r\n    puts \"It's a tweet!\"\r\n  when Twitter::DirectMessage\r\n    puts \"It's a direct message!\"\r\n  when Twitter::Streaming::StallWarning\r\n    warn \"Falling behind!\"\r\n  end\r\nend\r\n```\r\n\r\nAn `object` may be one of the following:\r\n* `Twitter::Tweet`\r\n* `Twitter::DirectMessage`\r\n* `Twitter::Streaming::DeletedTweet`\r\n* `Twitter::Streaming::Event`\r\n* `Twitter::Streaming::FriendList`\r\n* `Twitter::Streaming::StallWarning`\r\n\r\n## Object Graph\r\n![Entity-relationship diagram][erd]\r\n\r\n[erd]: https://cdn.rawgit.com/sferik/twitter/master/etc/erd.svg \"Entity-relationship diagram\"\r\n\r\nThis entity-relationship diagram is generated programatically. If you add or\r\nremove any Twitter objects, please regenerate the ERD with the following\r\ncommand:\r\n\r\n    bundle exec rake erd\r\n\r\n## Supported Ruby Versions\r\nThis library aims to support and is [tested against][travis] the following Ruby\r\nversions:\r\n\r\n* Ruby 1.9.3\r\n* Ruby 2.0.0\r\n* Ruby 2.1\r\n* JRuby 1.7 (in Ruby 1.9 mode)\r\n\r\nIf something doesn't work on one of these versions, it's a bug.\r\n\r\nThis library may inadvertently work (or seem to work) on other Ruby versions,\r\nhowever support will only be provided for the versions listed above.\r\n\r\nIf you would like this library to support another Ruby version or\r\nimplementation, you may volunteer to be a maintainer. Being a maintainer\r\nentails making sure all tests run and pass on that implementation. When\r\nsomething breaks on your implementation, you will be responsible for providing\r\npatches in a timely fashion. If critical issues for a particular implementation\r\nexist at the time of a major release, support for that Ruby version may be\r\ndropped.\r\n\r\n## Versioning\r\nThis library aims to adhere to [Semantic Versioning 2.0.0][semver]. Violations\r\nof this scheme should be reported as bugs. Specifically, if a minor or patch\r\nversion is released that breaks backward compatibility, that version should be\r\nimmediately yanked and/or a new version should be immediately released that\r\nrestores compatibility. Breaking changes to the public API will only be\r\nintroduced with new major versions. As a result of this policy, you can (and\r\nshould) specify a dependency on this gem using the [Pessimistic Version\r\nConstraint][pvc] with two digits of precision. For example:\r\n\r\n    spec.add_dependency 'twitter', '~> 6.0'\r\n\r\n[semver]: http://semver.org/\r\n[pvc]: http://docs.rubygems.org/read/chapter/16#page74\r\n\r\n## Copyright\r\nCopyright (c) 2006-2014 Erik Michaels-Ober, John Nunemaker, Wynn Netherland, Steve Richert, Steve Agalloco.\r\nSee [LICENSE][] for details.\r\n\r\n[license]: LICENSE.md\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}